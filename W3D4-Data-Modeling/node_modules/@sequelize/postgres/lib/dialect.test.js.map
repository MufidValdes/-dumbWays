{
  "version": 3,
  "sources": ["../src/dialect.test.ts"],
  "sourcesContent": ["import { Sequelize } from '@sequelize/core';\nimport type { PostgresConnectionOptions } from '@sequelize/postgres';\nimport { PostgresDialect } from '@sequelize/postgres';\nimport { expect } from 'chai';\n\ndescribe('PostgresDialect#parseConnectionUrl', () => {\n  const dialect = new Sequelize({ dialect: PostgresDialect }).dialect;\n\n  it('parses connection URL', () => {\n    const options: PostgresConnectionOptions = dialect.parseConnectionUrl(\n      'postgres://user:password@localhost:1234/dbname?client_encoding=utf8mb4',\n    );\n\n    expect(options).to.deep.eq({\n      host: 'localhost',\n      port: 1234,\n      user: 'user',\n      password: 'password',\n      database: 'dbname',\n      client_encoding: 'utf8mb4',\n    });\n  });\n\n  it('accepts the postgresql:// scheme', () => {\n    const options: PostgresConnectionOptions =\n      dialect.parseConnectionUrl('postgresql://@localhost');\n\n    expect(options).to.deep.eq({\n      host: 'localhost',\n    });\n  });\n});\n"],
  "mappings": ";AAAA,kBAA0B;AAE1B,sBAAgC;AAChC,kBAAuB;AAEvB,SAAS,sCAAsC,MAAM;AACnD,QAAM,UAAU,IAAI,sBAAU,EAAE,SAAS,gCAAgB,CAAC,EAAE;AAE5D,KAAG,yBAAyB,MAAM;AAChC,UAAM,UAAqC,QAAQ;AAAA,MACjD;AAAA,IACF;AAEA,4BAAO,OAAO,EAAE,GAAG,KAAK,GAAG;AAAA,MACzB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,MACV,UAAU;AAAA,MACV,iBAAiB;AAAA,IACnB,CAAC;AAAA,EACH,CAAC;AAED,KAAG,oCAAoC,MAAM;AAC3C,UAAM,UACJ,QAAQ,mBAAmB,yBAAyB;AAEtD,4BAAO,OAAO,EAAE,GAAG,KAAK,GAAG;AAAA,MACzB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
